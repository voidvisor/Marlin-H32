name: Build Configs

on:
  release:
    types: [created]

  workflow_dispatch:

jobs:
  Build-Default:
    name: Build Default Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [H32]
    steps:
    - uses: actions/checkout@v2
    - uses: carlosperate/arm-none-eabi-gcc-action@v1
    - name: Compile firmware
      id: build_configs
      run: |
        echo "::set-output name=filename::Default-NoProbe-${AQUILA_VER}.bin"
        cp firmware/Configuration\ Files/Aquila\ Templates/Default-NoProbe/Configuration.h firmware/Sources/Marlin/Configuration.h
        cp firmware/Configuration\ Files/Aquila\ Templates/Default-NoProbe/Configuration_adv.h firmware/Sources/Marlin/Configuration_adv.h
        cd firmware/Debug
        make all
      env:
        AQUILA_VER: ${{ matrix.chip }}
    - name: Upload firmware artifact
      uses: actions/upload-artifact@v3
      with:
        name: firmware
        path: firmware/Debug/firmware.bin
  Build-BLTouch:
    name: Build BL-Touch Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [H32]
        grid: [3,4,5,9]
        highspeed: [true,false]
    steps:
    - uses: actions/checkout@v2
    - uses: carlosperate/arm-none-eabi-gcc-action@v1
    - name: Compile firmware
      id: build_configs
      run: |
        if ($HS); then HSTMP=-HS; else HSTMP=; fi;
        echo "::set-output name=filename::BLTouch-${GRID}x${GRID}${HSTMP}-${AQUILA_VER}.bin"
        cp firmware/Configuration\ Files/Aquila\ Templates/BLTouch-3x3/Configuration.h firmware/Sources/Marlin/Configuration.h
        cp firmware/Configuration\ Files/Aquila\ Templates/BLTouch-3x3/Configuration_adv.h firmware/Sources/Marlin/Configuration_adv.h
        sed -i "s/#define GRID_MAX_POINTS_X.*/#define GRID_MAX_POINTS_X $GRID/g" firmware/Sources/Marlin/Configuration.h
        if ($HS); then TEMP=; else TEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define BLTOUCH_HS_MODE/$TEMP#define BLTOUCH_HS_MODE/g" firmware/Sources/Marlin/Configuration_adv.h
        cd firmware/Debug
        make all
      env:
        AQUILA_VER: ${{ matrix.chip }}
        GRID: ${{ matrix.grid }}
        HS: ${{ matrix.highspeed }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: firmware/Debug/firmware.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-Manual-Mesh:
    name: Build Manual-Mesh Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [H32]
        grid: [3,4,5]
    steps:
    - uses: actions/checkout@v2
    - uses: carlosperate/arm-none-eabi-gcc-action@v1
    - name: Compile firmware
      id: build_configs
      run: |
        echo "::set-output name=filename::ManualMesh-${GRID}x${GRID}-${AQUILA_VER}.bin"
        cp firmware/Configuration\ Files/Aquila\ Templates/ManualMesh-3x3/Configuration.h firmware/Sources/Marlin/Configuration.h
        cp firmware/Configuration\ Files/Aquila\ Templates/ManualMesh-3x3/Configuration_adv.h firmware/Sources/Marlin/Configuration_adv.h
        sed -i "s/#define GRID_MAX_POINTS_X.*/#define GRID_MAX_POINTS_X $GRID/g" firmware/Sources/Marlin/Configuration.h
        cd firmware/Debug
        make all
      env:
        AQUILA_VER: ${{ matrix.chip }}
        GRID: ${{ matrix.grid }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: firmware/Debug/firmware.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  # Build-UBL-BLTouch:
  #   name: Build BL-Touch UBL Files
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       chip: [H32]
  #       grid: [10,15]
  #       highspeed: [true,false]
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: carlosperate/arm-none-eabi-gcc-action@v1
  #   - name: Compile firmware
  #     id: build_configs
  #     run: |
  #       if ($HS); then HSTMP=-HS; else HSTMP=; fi;
  #       echo "::set-output name=filename::UBL-BLTouch-${GRID}x${GRID}${HSTMP}-${AQUILA_VER}.bin"
  #       cp firmware/Configuration\ Files/Aquila\ Templates/UBL-BLTouch-10x10/Configuration.h firmware/Sources/Marlin/Configuration.h
  #       cp firmware/Configuration\ Files/Aquila\ Templates/UBL-BLTouch-10x10/Configuration_adv.h firmware/Sources/Marlin/Configuration_adv.h
  #       sed -i "s/#define GRID_MAX_POINTS_X.*/#define GRID_MAX_POINTS_X $GRID/g" firmware/Sources/Marlin/Configuration.h
  #       if ($HS); then TEMP=; else TEMP='\/\/'; fi;
  #       sed -i "s/[^ ]*#define BLTOUCH_HS_MODE/$TEMP#define BLTOUCH_HS_MODE/g" firmware/Sources/Marlin/Configuration_adv.h
  #       cd firmware/Debug
  #       make all
  #     env:
  #       AQUILA_VER: ${{ matrix.chip }}
  #       GRID: ${{ matrix.grid }}
  #       HS: ${{ matrix.highspeed }}
  #   - name: Get release
  #     id: get_release
  #     uses: bruceadams/get-release@v1.2.2
  #     env:
  #       GITHUB_TOKEN: ${{ github.token }}
  #   - name: Upload Release Asset
  #     uses: actions/upload-release-asset@v1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     with:
  #       upload_url: ${{ steps.get_release.outputs.upload_url }}
  #       asset_path: firmware/Debug/firmware.bin
  #       asset_name: ${{ steps.build_configs.outputs.filename }}
  #       asset_content_type: application/x-binary
  Build-UBL-NoProbe:
    name: Build NoProbe UBL Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [H32]
        grid: [3,5]
    steps:
    - uses: actions/checkout@v2
    - uses: carlosperate/arm-none-eabi-gcc-action@v1
    - name: Compile firmware
      id: build_configs
      run: |
        echo "::set-output name=filename::UBL-NoProbe-${GRID}x${GRID}-${AQUILA_VER}.bin"
        cp firmware/Configuration\ Files/Aquila\ Templates/UBL-NoProbe-3x3/Configuration.h firmware/Sources/Marlin/Configuration.h
        cp firmware/Configuration\ Files/Aquila\ Templates/UBL-NoProbe-3x3/Configuration_adv.h firmware/Sources/Marlin/Configuration_adv.h
        sed -i "s/#define GRID_MAX_POINTS_X.*/#define GRID_MAX_POINTS_X $GRID/g" firmware/Sources/Marlin/Configuration.h
        cd firmware/Debug
        make all
      env:
        AQUILA_VER: ${{ matrix.chip }}
        GRID: ${{ matrix.grid }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: firmware/Debug/firmware.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
